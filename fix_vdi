#!/bin/bash
# script to fix "VDI not available" on Xen

if [ -z $1 ]; then
    echo "$0 vm-name"; exit
fi

log=/tmp/fix_vdi.log
vm_uuid=$(xe vm-list name-label=$1 --minimal)
disks=$(xe vm-disk-list vm=$1 | grep -c VDI)

for x in $(seq $disks); do
    number=$(($x - 1))
    vdi=$(xe vm-disk-list vm=$1 | grep -A4 "userdevice ( RW): $number" | tail -1 | awk '{print $5}')
    storage=$(xe vdi-list uuid=$vdi params=sr-uuid --minimal)
    echo "-> Forgetting VDI $number: $vdi"
    xe vdi-forget uuid=$vdi >$log 2>&1
    echo "-> Rescanning SR: $storage"
    xe sr-scan uuid=$storage >>$log 2>&1
    echo "-> Setting name-label and name-description of VDI $number to $1 DISK $number"
    xe vdi-param-set uuid=$vdi name-label="$1 DISK $number" >>$log 2>&1
    xe vdi-param-set uuid=$vdi name-description="$1 DISK $number" >>$log 2>&1
    if [ $number -eq 0 ]; then
        echo "-> Attaching Disk $number to $1"
        xe vbd-create vm-uuid=$vm_uuid bootable=true device=0 vdi-uuid=$vdi >>$log 2>&1
        while [ $? -eq 1 ]; do
            sleep 1
            xe vbd-create vm-uuid=$vm_uuid bootable=true device=0 vdi-uuid=$vdi >>$log 2>&1
        done
    else
        echo "-> Attaching Disk $number to $1"
        xe vbd-create vm-uuid=$vm_uuid device=$number vdi-uuid=$vdi >>$log 2>&1
        while [ $? -eq 1 ]; do
            sleep 1
            xe vbd-create vm-uuid=$vm_uuid device=$number vdi-uuid=$vdi >>$log 2>&1
        done
    fi
done

echo "-> Starting $1"
xe vm-start vm=$1 >>$log 2>&1
